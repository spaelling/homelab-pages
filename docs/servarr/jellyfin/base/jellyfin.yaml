---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: jellyfin-config
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---
# TODO: should be in servarr namespace
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: media
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 2Ti
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jellyfin
spec:
  selector:
    matchLabels:
      app: jellyfin
  template:
    metadata:
      labels:
        app: jellyfin
    spec:
      containers:
        - name: jellyfin
          image: docker.io/jellyfin/jellyfin
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8096
              protocol: TCP
          volumeMounts:
            - mountPath: /data/media
              name: media
              readOnly: True
            - mountPath: /config
              name: jellyfin-config
          resources:
            requests:
              memory: "256Mi"
              cpu: "100m"
            limits:
              memory: "512Mi"
              cpu: "500m"
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
      restartPolicy: Always
      volumes:
        - name: media
          persistentVolumeClaim:
            claimName: media
        - name: jellyfin-config
          persistentVolumeClaim:
            claimName: jellyfin-config
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: jellyfin-tls
spec:
  secretName: jellyfin-tls
  issuerRef:
    name: letsencrypt
    kind: ClusterIssuer
  dnsNames:
    - jellyfin.example.com
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: jellyfin-ingress
spec:
  ingressClassName: traefik
  rules:
    - host: jellyfin.example.com
      http:
        paths:
          - backend:
              service:
                name: jellyfin
                port:
                  number: 8096
            path: /
            pathType: Prefix
  tls:
    - hosts:
        - jellyfin.example.com
      secretName: jellyfin-tls
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: jellyfin
  name: jellyfin
spec:
  ports:
    - name: web
      port: 8096
      protocol: TCP
      targetPort: 8096
  selector:
    app: jellyfin
  type: ClusterIP
---

