apiVersion: v1
kind: Namespace
metadata:
  labels:
    kubernetes.io/metadata.name: pihole
  name: pihole
---
apiVersion: v1
data:
  02-custom.conf: |
    # 02-custom.conf - Custom DNSMasq configuration for Pi-hole
    server=1.1.1.1
kind: ConfigMap
metadata:
  name: custom-dnsmasq
  namespace: pihole
---
# ---
# apiVersion: cert-manager.io/v1
# kind: Certificate
# metadata:
#   name: pihole-web-ui-tls
#   namespace: pihole
# spec:
#   secretName: pihole-web-ui-tls
#   issuerRef:
#     name: letsencrypt
#     kind: ClusterIssuer
#   dnsNames:
#     - "*.pihole.local.spaelling.xyz"
# ---
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: pihole-web-ui
#   namespace: pihole
#   annotations:
#     traefik.ingress.kubernetes.io/router.middlewares: traefik-authentik-proxy-forwarder@kubernetescrd
# spec:
#   ingressClassName: traefik
#   rules:
#     - host: 01.pihole.local.spaelling.xyz
#       http:
#         paths:
#           - backend:
#               service:
#                 name: pihole-0-svc
#                 port:
#                   number: 80
#             path: /
#             pathType: Prefix
#     - host: 02.pihole.local.spaelling.xyz
#       http:
#         paths:
#           - backend:
#               service:
#                 name: pihole-1-svc
#                 port:
#                   number: 80
#             path: /
#             pathType: Prefix
#   tls:
#     - hosts:
#         - 01.pihole.local.spaelling.xyz
#         - 02.pihole.local.spaelling.xyz
#       secretName: pihole-web-ui-tls
# ---
apiVersion: v1
kind: Service
metadata:
  name: pihole-dns
  namespace: pihole
  annotations:
    kube-vip.io/loadbalancerIPs: "192.168.1.21"
spec:
  type: LoadBalancer
  selector:
    app: pihole
  ports:
    - port: 53
      name: dns-tcp
      protocol: TCP
      targetPort: 53
    - port: 53
      name: dns-udp
      protocol: UDP
      targetPort: 53
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: pihole
  namespace: pihole
spec:
  serviceName: pihole
  replicas: 2
  selector:
    matchLabels:
      app: pihole
  template:
    metadata:
      labels:
        app: pihole
    spec:
      containers:
        - name: pihole
          image: pihole/pihole:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 53
              name: dns-udp
              protocol: UDP
            - containerPort: 53
              name: dns-tcp
              protocol: TCP
            - containerPort: 80
              name: pihole-http
              protocol: TCP
          env:
            - name: TZ
              value: "Europe/Copenhagen"
            - name: WEBPASSWORD
              valueFrom:
                secretKeyRef:
                  key: password
                  name: pihole-webpassword
          resources:
            requests:
              memory: "256Mi"
              cpu: "100m"
            limits:
              memory: "512Mi"
              cpu: "500m"
          volumeMounts:
            - name: config
              mountPath: /etc/pihole
            - name: custom-dnsmasq
              mountPath: /etc/dnsmasq.d/02-custom.conf
              subPath: 02-custom.conf
      volumes:
        - configMap:
            defaultMode: 420
            name: custom-dnsmasq
          name: custom-dnsmasq
  volumeClaimTemplates:
    - metadata:
        name: config
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 500Mi
---

